@page "/fetchdata"
@using BlazorNet7Samples.Shared
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid Items="Forecasts" ResizableColumns>
        <PropertyColumn Property="f => f.Date" Format="MMM d" Sortable="true"/>
        <PropertyColumn Property="f => f.TemperatureC" Title="Temp (C)" Sortable="true"/>
        <PropertyColumn Property="f => f.TemperatureF" Title="Temp (F)" />
        <PropertyColumn Property="f => f.Summary">
            <ColumnOptions>
                <MyInput @bind-Value="search" @bind-Value:after="UpdateWeather" />
            </ColumnOptions>
        </PropertyColumn>
    </QuickGrid>
}

@code {
    private WeatherForecast[]? forecasts;
    string search = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await UpdateWeather();
    }

    IQueryable<WeatherForecast> Forecasts =>
        forecasts.Where(f => f.Summary.Contains(search)).AsQueryable();

    async Task UpdateWeather()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>($"WeatherForecast");
    }

}
